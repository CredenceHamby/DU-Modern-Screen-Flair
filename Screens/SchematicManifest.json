{
    "slots": {
        "0": {
            "name": "Screen",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "1": {
            "name": "Container",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "2": {
            "name": "slot3",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "3": {
            "name": "slot4",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "4": {
            "name": "slot5",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "5": {
            "name": "slot6",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "6": {
            "name": "slot7",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "7": {
            "name": "slot8",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "8": {
            "name": "slot9",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "9": {
            "name": "slot10",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "-1": {
            "name": "unit",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "-3": {
            "name": "player",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "-2": {
            "name": "construct",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "-4": {
            "name": "system",
            "type": {
                "events": [],
                "methods": []
            }
        },
        "-5": {
            "name": "library",
            "type": {
                "events": [],
                "methods": []
            }
        }
    },
    "handlers": [
        {
            "code": "local Payload = Container.getContent()\n\nfor index, data in pairs(Payload) do\n    if SchemList[tostring(data.id)] then\n        SchemList[tostring(data.id)] = data.quantity\n    end\nend\n\nMessage = \"\"\nfor ii = 1,71 do\n    Message = Message .. SchemList[ListOrder[ii]] .. \"$\"\nend\nMessage = Message .. SchemList[ListOrder[72]]\n\nScreen.setScriptInput(Message)",
            "filter": {
                "args": [],
                "signature": "onContentUpdate()",
                "slotKey": "1"
            },
            "key": "0"
        },
        {
            "code": "SchemList = {\n[\"3332597852\"]=0,\n[\"2003602752\"]=0,\n[\"2326433413\"]=0,\n[\"1681671893\"]=0,\n\n[\"690638651\"]=0,\n[\"4073976374\"]=0,\n[\"3707339625\"]=0,\n[\"2485530515\"]=0,\n[\"2752973532\"]=0,\n\n[\"1910482623\"]=0,\n[\"4148773283\"]=0,\n[\"2066101218\"]=0,\n[\"2068774589\"]=0,\n[\"304578197\"]=0,\n[\"2096799848\"]=0,\n[\"1752968727\"]=0,\n[\"2726927301\"]=0,\n[\"616601802\"]=0,\n[\"3677281424\"]=0,\n[\"787727253\"]=0,\n[\"425872842\"]=0,\n[\"3713463144\"]=0,\n[\"1427639881\"]=0,\n[\"109515712\"]=0,\n[\"210052275\"]=0,\n[\"3890840920\"]=0,\n[\"3881438643\"]=0,\n[\"1614573474\"]=0,\n[\"1974208697\"]=0,\n[\"1513927457\"]=0,\n[\"880043901\"]=0,\n[\"3672319913\"]=0,\n[\"86717297\"]=0,\n[\"1320378000\"]=0,\n\n[\"1477134528\"]=0,\n[\"1224468838\"]=0,\n[\"1861676811\"]=0,\n[\"784932973\"]=0,\n\n[\"120427296\"]=0,\n[\"1213081642\"]=0,\n[\"1417495315\"]=0,\n[\"1202149588\"]=0,\n\n[\"318308564\"]=0,\n\n[\"3077761447\"]=0,\n[\"3992802706\"]=0,\n[\"1917988879\"]=0,\n[\"363077945\"]=0,\n\n[\"1952035274\"]=0,\n[\"2566982373\"]=0,\n[\"1045229911\"]=0,\n[\"2702634486\"]=0,\n\n[\"326757369\"]=0,\n[\"3336558558\"]=0,\n[\"399761377\"]=0,\n[\"512435856\"]=0,\n[\"2413250793\"]=0,\n[\"1705420479\"]=0,\n[\"3125069948\"]=0,\n[\"2913149958\"]=0,\n[\"2293088862\"]=0,\n[\"3636126848\"]=0,\n[\"3847207511\"]=0,\n[\"2557110259\"]=0,\n\n[\"625377458\"]=0,\n[\"4221430495\"]=0,\n[\"99491659\"]=0,\n[\"3303272691\"]=0,\n[\"2479827059\"]=0,\n[\"632722426\"]=0,\n[\"2343247971\"]=0,\n[\"3743434922\"]=0,\n[\"1885016266\"]=0\n}\n\nListOrder = {\n[1]=\"3332597852\",\n[2]=\"2003602752\",\n[3]=\"2326433413\",\n[4]=\"1681671893\",\n\n[5]=\"690638651\",\n[6]=\"4073976374\",\n[7]=\"3707339625\",\n[8]=\"2485530515\",\n[9]=\"2752973532\",\n\n[10]=\"1910482623\",\n[11]=\"4148773283\",\n[12]=\"2066101218\",\n[13]=\"2068774589\",\n[14]=\"304578197\",\n[15]=\"2096799848\",\n[16]=\"1752968727\",\n[17]=\"2726927301\",\n[18]=\"616601802\",\n[19]=\"3677281424\",\n[20]=\"787727253\",\n[21]=\"425872842\",\n[22]=\"3713463144\",\n[23]=\"1427639881\",\n[24]=\"109515712\",\n[25]=\"210052275\",\n[26]=\"3890840920\",\n[27]=\"3881438643\",\n[28]=\"1614573474\",\n[29]=\"1974208697\",\n[30]=\"1513927457\",\n[31]=\"880043901\",\n[32]=\"3672319913\",\n[33]=\"86717297\",\n[34]=\"1320378000\",\n\n[35]=\"1477134528\",\n[36]=\"1224468838\",\n[37]=\"1861676811\",\n[38]=\"784932973\",\n\n[39]=\"120427296\",\n[40]=\"1213081642\",\n[41]=\"1417495315\",\n[42]=\"1202149588\",\n\n[43]=\"318308564\",\n\n[44]=\"3077761447\",\n[45]=\"3992802706\",\n[46]=\"1917988879\",\n[47]=\"363077945\",\n\n[48]=\"1952035274\",\n[49]=\"2566982373\",\n[50]=\"1045229911\",\n[51]=\"2702634486\",\n\n[52]=\"326757369\",\n[53]=\"3336558558\",\n[54]=\"399761377\",\n[55]=\"512435856\",\n[56]=\"2413250793\",\n[57]=\"1705420479\",\n[58]=\"3125069948\",\n[59]=\"2913149958\",\n[60]=\"2293088862\",\n[61]=\"3636126848\",\n[62]=\"3847207511\",\n[63]=\"2557110259\",\n\n[64]=\"625377458\",\n[65]=\"4221430495\",\n[66]=\"99491659\",\n[67]=\"3303272691\",\n[68]=\"2479827059\",\n[69]=\"632722426\",\n[70]=\"2343247971\",\n[71]=\"3743434922\",\n[72]=\"1885016266\"\n}\n\nTime = Container.updateContent()\n\nif Time > 0 then\n    \n    unit.setTimer('Wait')\n    \nend\n\n",
            "filter": {
                "args": [],
                "signature": "onStart()",
                "slotKey": "-1"
            },
            "key": "1"
        },
        {
            "code": "Container.updateContent()",
            "filter": {
                "args": [
                    {
                        "value": "Wait"
                    }
                ],
                "signature": "onTimer(tag)",
                "slotKey": "-1"
            },
            "key": "2"
        },
        {
            "code": "Screen.setRenderScript([[\n    SchemList = {\n[\"3332597852\"]=\"T2 Pure\",\n[\"2003602752\"]=\"T3 Pure\",\n[\"2326433413\"]=\"T4 Pure\",\n[\"1681671893\"]=\"T5 Pure\",\n\n[\"690638651\"]=\"T1 Product\",\n[\"4073976374\"]=\"T2 Product\",\n[\"3707339625\"]=\"T3 Product\",\n[\"2485530515\"]=\"T4 Product\",\n[\"2752973532\"]=\"T5 Product\",\n\n[\"1910482623\"]=\"T1 XS Element\",\n[\"4148773283\"]=\"T1 S Element\",\n[\"2066101218\"]=\"T1 M Element\",\n[\"2068774589\"]=\"T1 L Element\",\n[\"304578197\"]=\"T1 XL Element\",\n[\"2096799848\"]=\"T2 XS Element\",\n[\"1752968727\"]=\"T2 S Element\",\n[\"2726927301\"]=\"T2 M Element\",\n[\"616601802\"]=\"T2 L Element\",\n[\"3677281424\"]=\"T2 XL Element\",\n[\"787727253\"]=\"T3 XS Element\",\n[\"425872842\"]=\"T3 S Element\",\n[\"3713463144\"]=\"T3 M Element\",\n[\"1427639881\"]=\"T3 L Element\",\n[\"109515712\"]=\"T3 XL Element\",\n[\"210052275\"]=\"T4 XS Element\",\n[\"3890840920\"]=\"T4 S Element\",\n[\"3881438643\"]=\"T4 M Element\",\n[\"1614573474\"]=\"T4 L Element\",\n[\"1974208697\"]=\"T4 XL Element\",\n[\"1513927457\"]=\"T5 XS Element\",\n[\"880043901\"]=\"T5 S Element\",\n[\"3672319913\"]=\"T5 M Element\",\n[\"86717297\"]=\"T5 L Element\",\n[\"1320378000\"]=\"T5 XL Element\",\n\n[\"1477134528\"]=\"Support XS\",\n[\"1224468838\"]=\"Support S\",\n[\"1861676811\"]=\"Support M\",\n[\"784932973\"]=\"Support L\",\n\n[\"120427296\"]=\"Core Unit XS\",\n[\"1213081642\"]=\"Core Unit S\",\n[\"1417495315\"]=\"Core Unit M\",\n[\"1202149588\"]=\"Core Unit L\",\n\n[\"318308564\"]=\"Territory Unit\",\n\n[\"3077761447\"]=\"Atmospheric Fuel\",\n[\"3992802706\"]=\"Rocket Fuels\",\n[\"1917988879\"]=\"Space Fuels\",\n[\"363077945\"]=\"Warp Cell\",\n\n[\"1952035274\"]=\"T2 Scrap\",\n[\"2566982373\"]=\"T3 Scrap\",\n[\"1045229911\"]=\"T4 Scrap\",\n[\"2702634486\"]=\"T5 Scrap\",\n\n[\"326757369\"]=\"T2 Ammo XS\",\n[\"3336558558\"]=\"T2 Ammo S\",\n[\"399761377\"]=\"T2 Ammo M\",\n[\"512435856\"]=\"T2 Ammo L\",\n[\"2413250793\"]=\"T3 Ammo XS\",\n[\"1705420479\"]=\"T3 Ammo S\",\n[\"3125069948\"]=\"T3 Ammo M\",\n[\"2913149958\"]=\"T3 Ammo L\",\n[\"2293088862\"]=\"T4 Ammo XS\",\n[\"3636126848\"]=\"T4 Ammo S\",\n[\"3847207511\"]=\"T4 Ammo M\",\n[\"2557110259\"]=\"T4 Ammo L\",\n\n[\"625377458\"]=\"T2 Pure HC\",\n[\"4221430495\"]=\"T3 Pure HC\",\n[\"99491659\"]=\"T4 Pure HC\",\n[\"3303272691\"]=\"T5 Pure HC\",\n[\"2479827059\"]=\"T1 Product HC\",\n[\"632722426\"]=\"T2 Product HC\",\n[\"2343247971\"]=\"T3 Product HC\",\n[\"3743434922\"]=\"T4 Product HC\",\n[\"1885016266\"]=\"T5 Product HC\"\n}\n\nListOrder = {\n[1]=\"3332597852\",\n[2]=\"2003602752\",\n[3]=\"2326433413\",\n[4]=\"1681671893\",\n\n[5]=\"690638651\",\n[6]=\"4073976374\",\n[7]=\"3707339625\",\n[8]=\"2485530515\",\n[9]=\"2752973532\",\n\n[10]=\"1910482623\",\n[11]=\"4148773283\",\n[12]=\"2066101218\",\n[13]=\"2068774589\",\n[14]=\"304578197\",\n[15]=\"2096799848\",\n[16]=\"1752968727\",\n[17]=\"2726927301\",\n[18]=\"616601802\",\n[19]=\"3677281424\",\n[20]=\"787727253\",\n[21]=\"425872842\",\n[22]=\"3713463144\",\n[23]=\"1427639881\",\n[24]=\"109515712\",\n[25]=\"210052275\",\n[26]=\"3890840920\",\n[27]=\"3881438643\",\n[28]=\"1614573474\",\n[29]=\"1974208697\",\n[30]=\"1513927457\",\n[31]=\"880043901\",\n[32]=\"3672319913\",\n[33]=\"86717297\",\n[34]=\"1320378000\",\n\n[35]=\"1477134528\",\n[36]=\"1224468838\",\n[37]=\"1861676811\",\n[38]=\"784932973\",\n\n[39]=\"120427296\",\n[40]=\"1213081642\",\n[41]=\"1417495315\",\n[42]=\"1202149588\",\n\n[43]=\"318308564\",\n\n[44]=\"3077761447\",\n[45]=\"3992802706\",\n[46]=\"1917988879\",\n[47]=\"363077945\",\n\n[48]=\"1952035274\",\n[49]=\"2566982373\",\n[50]=\"1045229911\",\n[51]=\"2702634486\",\n\n[52]=\"326757369\",\n[53]=\"3336558558\",\n[54]=\"399761377\",\n[55]=\"512435856\",\n[56]=\"2413250793\",\n[57]=\"1705420479\",\n[58]=\"3125069948\",\n[59]=\"2913149958\",\n[60]=\"2293088862\",\n[61]=\"3636126848\",\n[62]=\"3847207511\",\n[63]=\"2557110259\",\n\n[64]=\"625377458\",\n[65]=\"4221430495\",\n[66]=\"99491659\",\n[67]=\"3303272691\",\n[68]=\"2479827059\",\n[69]=\"632722426\",\n[70]=\"2343247971\",\n[71]=\"3743434922\",\n[72]=\"1885016266\"\n}\n\nCapList = {\n[1]=\"20000\",\n[2]=\"10000\",\n[3]=\"5000\",\n[4]=\"1000\",\n\n[5]=\"40000\",\n[6]=\"20000\",\n[7]=\"10000\",\n[8]=\"5000\",\n[9]=\"1000\",\n\n[10]=\"100\",\n[11]=\"50\",\n[12]=\"30\",\n[13]=\"15\",\n[14]=\"5\",\n[15]=\"100\",\n[16]=\"50\",\n[17]=\"30\",\n[18]=\"15\",\n[19]=\"5\",\n[20]=\"100\",\n[21]=\"50\",\n[22]=\"30\",\n[23]=\"15\",\n[24]=\"5\",\n[25]=\"100\",\n[26]=\"50\",\n[27]=\"30\",\n[28]=\"15\",\n[29]=\"5\",\n[30]=\"100\",\n[31]=\"50\",\n[32]=\"30\",\n[33]=\"15\",\n[34]=\"5\",\n\n[35]=\"100\",\n[36]=\"100\",\n[37]=\"100\",\n[38]=\"50\",\n\n[39]=\"50\",\n[40]=\"25\",\n[41]=\"10\",\n[42]=\"5\",\n\n[43]=\"10\",\n\n[44]=\"1000\",\n[45]=\"1000\",\n[46]=\"1000\",\n[47]=\"500\",\n\n[48]=\"1000\",\n[49]=\"1000\",\n[50]=\"1000\",\n[51]=\"1000\",\n\n[52]=\"1000\",\n[53]=\"1000\",\n[54]=\"1000\",\n[55]=\"1000\",\n[56]=\"1000\",\n[57]=\"1000\",\n[58]=\"1000\",\n[59]=\"1000\",\n[60]=\"1000\",\n[61]=\"1000\",\n[62]=\"1000\",\n[63]=\"1000\",\n\n[64]=\"1000\",\n[65]=\"1000\",\n[66]=\"1000\",\n[67]=\"1000\",\n[68]=\"1000\",\n[69]=\"1000\",\n[70]=\"1000\",\n[71]=\"1000\",\n[72]=\"1000\"\n}\n\nColor = {\n[1]=1,\n[2]=1,\n[3]=1,\n[4]=1,\n\n[5]=1,\n[6]=1,\n[7]=1,\n[8]=1,\n[9]=1,\n\n[10]=2,\n[11]=2,\n[12]=2,\n[13]=2,\n[14]=2,\n[15]=2,\n[16]=2,\n[17]=2,\n[18]=2,\n[19]=2,\n[20]=2,\n[21]=2,\n[22]=2,\n[23]=2,\n[24]=2,\n[25]=2,\n[26]=2,\n[27]=2,\n[28]=2,\n[29]=2,\n[30]=2,\n[31]=2,\n[32]=2,\n[33]=2,\n[34]=2,\n\n[35]=2,\n[36]=2,\n[37]=2,\n[38]=2,\n\n[39]=2,\n[40]=2,\n[41]=2,\n[42]=2,\n\n[43]=2,\n\n[44]=3,\n[45]=3,\n[46]=3,\n[47]=3,\n\n[48]=4,\n[49]=4,\n[50]=4,\n[51]=4,\n\n[52]=5,\n[53]=5,\n[54]=5,\n[55]=5,\n[56]=5,\n[57]=5,\n[58]=5,\n[59]=5,\n[60]=5,\n[61]=5,\n[62]=5,\n[63]=5,\n\n[64]=6,\n[65]=6,\n[66]=6,\n[67]=6,\n[68]=6,\n[69]=6,\n[70]=6,\n[71]=6,\n[72]=6\n}\n\nR = {1,0.2,0.2,1,1,0,1,0.5}\nG = {0.2,1,0.2,1,0,1,0.5,0.2}\nB = {0.2,0.2,1,0,1,1,0.2,1}\n\nfunction mysplit(inputstr, sep)\n    if sep == nil then\n        sep = \"%s\"\n    end\n    local t={}\n    for str in string.gmatch(inputstr, \"([^\"..sep..\"]+)\") do\n        table.insert(t, str)\n    end\n    return t\nend\n\nPayload = getInput()\nData = mysplit(Payload,\"$\")\n    \nlocal rx, ry = getResolution()\nlocal vw = rx/100\nlocal vh = ry/100\n\nlocal List = createLayer()\n\nX = 0*vw\nY = 0*vh\nSX = 100*vw\nSY = 1.38888*vh\n\nlocal HeaderFont = loadFont(getAvailableFontName(3), 1.5*vh)\n\nCount = 0\nfor ii = 1,36 do\n    \n    Count = Count + 1\n    \n    setNextFillColor(List,1,1,1,0.1)\n    addBox(List, X, Y + (ii-1)*2*SY, SX, SY)\n\n    setNextFillColor(List,R[Color[Count] ],G[Color[Count] ],B[Color[Count] ],0.1)\n    addBox(List, X, Y + (ii-1)*2*SY, SX, SY)\n    \n    Count = Count + 1\n    \n    setNextFillColor(List,1,1,1,0.1)\n    addBox(List, X, Y + SY + (ii-1)*2*SY, SX, SY)\n\n    setNextFillColor(List,R[Color[Count] ],G[Color[Count] ],B[Color[Count] ],0.1)\n    addBox(List, X, Y + SY + (ii-1)*2*SY, SX, SY)\n\nend\n\nfor ii = 1,72 do\n    \n    setNextFillColor(List, 0, 0, 0, 1)\n    setNextTextAlign(List, AlignH_Left, AlignV_Middle)\n    addText(List, HeaderFont, SchemList[ListOrder[ii] ], X + 1*vw, Y + SY/2 + (ii-1)*SY)\n    \n    setNextFillColor(List,1,1,1,0.1)\n    addBox(List, X, Y + (ii-1)*SY, 79*vw*math.min(tonumber(Data[ii])/tonumber(CapList[ii]),1), SY)\n    \n    setNextFillColor(List, 0, 0, 0, 1)\n    setNextTextAlign(List, AlignH_Left, AlignV_Middle)\n    addText(List, HeaderFont,\"|\" .. CapList[ii], X + 79*vw, Y + SY/2 + (ii-1)*SY)\n    \n    setNextFillColor(List, 1 - math.min(tonumber(Data[ii])/tonumber(CapList[ii]),1) ,  math.min(tonumber(Data[ii])/tonumber(CapList[ii]),1) , 0, 1)\n    setNextTextAlign(List, AlignH_Right, AlignV_Middle)\n    addText(List, HeaderFont,string.sub(Data[ii], 1, -3) .. \"\", X + 79*vw, Y + SY/2 + (ii-1)*SY)\n    \n    logMessage(tonumber(Data[ii])/tonumber(CapList[ii]))\n       \nend\n\nlogMessage(getInput())\n]]\n)",
            "filter": {
                "args": [],
                "signature": "onStart()",
                "slotKey": "-1"
            },
            "key": 4
        }
    ],
    "methods": [],
    "events": []
}